package dao.Impl;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;

import dao.NhanVienDao;
import entity.NhanVien;
import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityTransaction;
import jakarta.persistence.Persistence;

public class NhanVienDaoImpl extends UnicastRemoteObject implements NhanVienDao{

	
	/**
	 * 
	 */
	private static final long serialVersionUID = 5929402348281005333L;
	private EntityManager em;

	protected NhanVienDaoImpl() throws RemoteException {
		em = Persistence.createEntityManagerFactory("jpa-mssql")
				.createEntityManager();
	}
	
	public int getMaxEmployeeNumber() {
	    em = EntityManagerFactory.createEntityManager(); // Tạo EntityManager
	    try {
	        // Sử dụng JPQL để truy vấn mã nhân viên lớn nhất
	        TypedQuery<Integer> query = em.createQuery("SELECT MAX(CAST(SUBSTRING(nv.maNhanVien, 3, LENGTH(nv.maNhanVien) - 2) AS int)) FROM NhanVien nv", Integer.class);
	        
	        Integer maxEmployeeNumber = query.getSingleResult(); // Thực hiện truy vấn và lấy kết quả
	        
	        // Nếu không có kết quả, trả về 0
	        if (maxEmployeeNumber == null) {
	            return 0;
	        }
	        
	        return maxEmployeeNumber;
	    } catch (Exception e) {
	        e.printStackTrace();
	    } finally {
	        em.close(); // Đóng EntityManager sau khi sử dụng
	    }
	    
	    return 0; // Trả về giá trị mặc định nếu có lỗi
	}

	
	// Viết phương thức thêm 1 nhân viên vào cơ sở dữ liệu trả về boolean
	@Override
	public boolean ThemNhanVien(NhanVien nv) {
		EntityTransaction tx = em.getTransaction();
		try {
			tx.begin();
			
			em.persist(nv);
			
			tx.commit();
			
			return true;
		}catch (Exception e) {
			tx.rollback();
			e.printStackTrace();
		}
		
		return false;

	}
	
	
	

}
